# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

swagger: '2.0'
info:
  title: Lando API
  description: An API to get and land Phabricator revisions.
  version: "3.0.0"
produces:
  - application/json
paths:
  /:
    get:
      summary: Redirect to the API specification
      responses:
        302:
          description: Redirect to swagger.json
          headers:
            Location:
              description: Where to redirect to
              type: string
  /stack:
    get:
      operationId: landoapi.api.treestatus.get_stack
      description: |
        Get the `undo stack` of changes to trees, most recent first.
      responses:
        200:
          description: List of state changes.
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/StateChange'

  /stack/{id}:
    patch:
      operationId: landoapi.api.treestatus.update_stack
      description: |
        Change (stack) changes to trees.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          description: Stack update
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
              tags:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Status
          schema:
            type: string

    delete:
      operationId: landoapi.api.treestatus.delete_stack
      description: |
        Remove the given change from the undo stack.

        With ``?revert=1`` This applies the settings that were
        present before the change to the affected trees.

        With ``?revert=0`` or omitting the revert keyword, it merely removes
        the change from the stack without changing the settings on the tree.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: revert
          in: query
          required: true
          default: 0
          type: integer
      responses:
        200:
          description: Status
          schema:
            type: string

  /trees:
    get:
      operationId: landoapi.api.treestatus.get_trees
      description: Get the status of all trees.
      responses:
        200:
          description: Trees
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: object
                additionalProperties:
                  $ref: '#/definitions/TreeWithTags'
    patch:
      operationId: landoapi.api.treestatus.update_trees
      description: |
        Update trees status.

        If the update indicates that the previous state should be saved, then
        a new change will be added to the stack containing the previous status
        and reason.  In this case, both reason and status must be supplied.

        The `tags` property must not be empty if `status` is `closed`.
      parameters:
        - name: body
          in: body
          description: Tree update
          required: true
          schema:
            $ref: '#/definitions/TreeUpdate'
      responses:
        200:
          description: Tree
          schema:
            type: array
            items:
              $ref: '#/definitions/Tree'

  /trees/{tree}:
    get:
      operationId: landoapi.api.treestatus.get_tree
      description: |
        Get the status of a single tree.

        This endpoint is cached heavily and is safe to call frequently to verify
        the status of a tree.
      parameters:
        - name: tree
          in: path
          description: Tree name
          required: true
          type: string
      responses:
        200:
          description: Tree
          schema:
            type: object
            required:
              - result
            properties:
              result:
                $ref: '#/definitions/TreeWithTags'

    put:
      operationId: landoapi.api.treestatus.make_tree
      description: Make a new tree.
      parameters:
        - name: tree
          in: path
          description: Tree
          required: true
          type: string
        - name: body
          in: body
          description: Tree
          required: true
          schema:
            $ref: '#/definitions/Tree'
      responses:
        201:
          description: Tree
          schema:
            type: string
    delete:
      operationId: landoapi.api.treestatus.delete_tree
      description: Delete a tree.
      parameters:
        - name: tree
          in: path
          description: Tree
          required: true
          type: string
      responses:
        200:
          description: Tree
          schema:
            type: string

  /log/{id}:
    patch:
      operationId: landoapi.api.treestatus.update_log
      description: |
        Change log of the tree.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          description: Log update
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
              tags:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Status
          schema:
            type: string

  /trees/{tree}/logs_all:
    get:
      operationId: landoapi.api.treestatus.get_logs_all
      description: |
        Get all log of changes for the given tree.
      consumes:
        - application/json
      parameters:
        - name: tree
          in: path
          description: Tree
          required: true
          type: string
      responses:
        200:
          description: Tree
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/TreeLog'

  /trees/{tree}/logs:
    get:
      operationId: landoapi.api.treestatus.get_logs
      description: |
        Get a short log of changes for the given tree.
      consumes:
        - application/json
      parameters:
        - name: tree
          in: path
          description: Tree
          required: true
          type: string
      responses:
        200:
          description: Tree
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/TreeLog'

  /trees2:
    get:
      operationId: landoapi.api.treestatus.get_trees2
      description: Get the status of all trees.
      responses:
        200:
          description: Trees
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/TreeWithTags'

definitions:

  Tree:
    type: object
    description: A representation of a single tree.
    required:
      - tree
      - status
      - reason
      - message_of_the_day
      - category
    properties:
      tree:
        type: string
        description: the name of the tree
      status:
        type: string
        description: the current status
      reason:
        type: string
        description: the reason for the status
      message_of_the_day:
        type: string
        description: even more information about the status
      category:
        type: string
        description: Category of the tree.

  TreeWithTags:
    type: object
    description: A representation of a single tree.
    required:
      - tree
      - status
      - reason
      - message_of_the_day
      - tags
    properties:
      tree:
        type: string
        description: the name of the tree
      status:
        type: string
        description: the current status
      reason:
        type: string
        description: the reason for the status
      message_of_the_day:
        type: string
        description: even more information about the status
      tags:
        type: array
        description: tags of the last change
        items:
          type: string

  TreeLog:
    type: object
    description: |
      A recorded change to a trees status or reason, along with a set of tags
      assigned at the time.  This is useful for analysis of tree closures and
      their causes.
    required:
      - id
      - tree
      - when
      - who
      - status
      - reason
      - tags
    properties:
      id:
        type: integer
        description: the id of the tree log
      tree:
        type: string
        description: the name of the tree
      when:
        type: string
        description: the time the change occurred
      who:
        type: string
        description: the user making the change
      status:
        type: string
        description: the new status
      reason:
        type: string
        description: the reason for the status
      tags:
        type: array
        description: tags for the change
        items:
          type: string

  StateChange:
    type: object
    description: |
      A change to one or more trees status, suitable for reverting the change.
      Some of the information here is redundant to TreeLog, but is present to
      help users determine which change to revert.  The previous state of the
      tree is not exposed in this data type.
    required:
      - id
      - trees
      - when
      - who
      - status
      - reason
    properties:
      id:
        type: integer
        description: id of this change
      trees:
        type: array
        description: the names of the affected trees
        items:
          type: object
          required:
            - id
            - tree
            - last_state
          properties:
            id:
              type: integer
            tree:
              type: string
            last_state:
              type: object
              required:
                - status
                - reason
                - tags
              properties:
                status:
                  type: string
                reason:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                reason:
                  type: string
      when:
        type: string
        description: the time the change occurred
      who:
        type: string
        description: the user who made the change
      status:
        type: string
        description: the updated (new) status
      reason:
        type: string
        description: the reason for the status change

  TreeUpdate:
    type: object
    description: |
      A requested update to one or more trees.  See the corresponding method
      for information on which fields must be supplied and when.
    required:
      - trees
    properties:
      trees:
        type: array
        description: the trees to update
        items:
          type: string
      status:
        type: string
        description: the new tree status (for all affected trees)
      reason:
        type: string
        description: the reason for the status
      message_of_the_day:
        type: string
        description: the message of the day for the tree
      tags:
        type: array
        description: |
          tags associated with the status update; this is required (including
          at least one tag) if status = 'closed',
        items:
          type: string
      remember:
        type: boolean
        description: |
          if true, add the change to the status and reason to the undo stack.
          Note that updates to the message of the day are not recorded.

  # RFC 7807 Problem Details for HTTP APIs (https://tools.ietf.org/html/rfc7807)
  # is used for error messages. Extensions to the error can be speced using an
  # "allOf" schema keyword along with additional schema definition
  Error:
    type: object
    properties:
      status:
        type: integer
      type:
        type: string
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
