# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_EMAIL   - login info for docker hub
# DOCKER_USER
# DOCKER_PASS

version: 2
jobs:
  full:
    docker:
      # Use the python image, all we really care about is the preinstalled
      # tools in a circleci image.
      - image: circleci/python
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Create version.json
          command: |
            echo "
              {
                \"commit\": \"$CIRCLE_SHA1\",
                \"version\": \"$CIRCLE_SHA1\",
                \"source\": \"https://github.com/mozilla-conduit/lando-api\",
                \"build\": \"$CIRCLE_BUILD_URL\"
              }
            " > version.json
            mkdir /tmp/artifacts && cp version.json /tmp/artifacts/version.js

      - run:
          name: Build the image
          command: |
            docker build --pull \
              -f Dockerfile \
              -t mozilla/landoapi .
      - run:
          name: Get image id
          command: |
            docker inspect -f '{{.Id}}' mozilla/landoapi \
              | tee /tmp/artifacts/docker-image-shasum256.txt
      - store_artifacts:
          path: /tmp/artifacts

      - run:
          name: Create docker volumes for copying data
          command: |
            docker volume create landoapi_database_init
            docker volume create landoapi_lando_test_results
            docker create --name temp_container \
              -v landoapi_database_init:/landoapi_database_init \
              -v landoapi_lando_test_results:/landoapi_lando_test_results \
              hello-world

      - run:
          name: Copy database intiailization script
          command: |
            docker cp \
              ./docker/postgres-init-scripts/create_databases.sql \
              temp_container:/landoapi_database_init/create_databases.sql


      - run:
          name: Start the database.
          command: |
            docker-compose -f docker-compose.ci.yml -p circlecitest up -d lando-api.db
            until docker-compose -f docker-compose.ci.yml -p circlecitest run \
              -e PGPASSWORD=password \
              --rm \
              lando-api.db \
              psql -h lando-api.db -w -U postgres -c "SELECT 1;"
            do
              echo "Waiting for DB to start"
              sleep 2
            done

      - run:
          name: Run the tests
          command: |
            docker-compose \
              -f docker-compose.ci.yml \
              -p landoapi \
              run lando-api test --junitxml=/test_results/junit.xml

      - run:
          name: Copy the test report
          when: always
          command: |
            mkdir /tmp/test-reports
            docker cp temp_container:/landoapi_lando_test_results/junit.xml /tmp/test-reports/junit.xml

      - store_test_results:
          path: /tmp/test-reports

      - store_artifacts:
          path: /tmp/test-reports

      - deploy:
          command: |
            if [[ "x$DOCKERHUB_REPO" != x ]]; then
              docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
              docker tag "mozilla/landoapi" "${DOCKERHUB_REPO}"
              docker tag "mozilla/landoapi" "${DOCKERHUB_REPO}:${CIRCLE_SHA1}"
              docker push "${DOCKERHUB_REPO}:${CIRCLE_SHA1}"
              if [[ ${CIRCLE_BRANCH} == master ]]; then
                docker push "${DOCKERHUB_REPO}:latest"
              fi
            fi

workflows:
  version: 2
  main:
    jobs:
      - full:
          filters:
            branches:
              ignore:
                - /\//
